// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PassengerInformation.Infrastructure.Persistence;

#nullable disable

namespace PassengerInformation.Infrastructure.Migrations
{
    [DbContext(typeof(PassengerDbContext))]
    [Migration("20250714101100_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PassengerInformation.Domain.Entities.Passenger", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AffiliatedPassengerIds")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("AffiliatedPassengerIds");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Passengers", (string)null);
                });

            modelBuilder.Entity("PassengerInformation.Domain.Entities.Passenger", b =>
                {
                    b.OwnsOne("PassengerInformation.Domain.ValueObjects.FlightNumber", "FlightNumber", b1 =>
                        {
                            b1.Property<Guid>("PassengerId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("FlightNumber");

                            b1.HasKey("PassengerId");

                            b1.ToTable("Passengers");

                            b1.WithOwner()
                                .HasForeignKey("PassengerId");
                        });

                    b.OwnsOne("PassengerInformation.Domain.ValueObjects.PassengerInfo", "Info", b1 =>
                        {
                            b1.Property<Guid>("PassengerId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Age")
                                .HasColumnType("int")
                                .HasColumnName("Age");

                            b1.Property<string>("Gender")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Gender");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Name");

                            b1.Property<string>("Nationality")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Nationality");

                            b1.Property<int>("SeatType")
                                .HasColumnType("int")
                                .HasColumnName("SeatType");

                            b1.HasKey("PassengerId");

                            b1.ToTable("Passengers");

                            b1.WithOwner()
                                .HasForeignKey("PassengerId");
                        });

                    b.OwnsOne("PassengerInformation.Domain.ValueObjects.SeatNumber", "SeatNumber", b1 =>
                        {
                            b1.Property<Guid>("PassengerId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("SeatNumber");

                            b1.HasKey("PassengerId");

                            b1.ToTable("Passengers");

                            b1.WithOwner()
                                .HasForeignKey("PassengerId");
                        });

                    b.Navigation("FlightNumber")
                        .IsRequired();

                    b.Navigation("Info")
                        .IsRequired();

                    b.Navigation("SeatNumber");
                });
#pragma warning restore 612, 618
        }
    }
}
